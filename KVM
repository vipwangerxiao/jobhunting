KVM包括两个部分(http://www.linuxidc.com/Linux/2015-01/112328.htm)

KVM驱动，是Linux内核的一个模块，主要负责虚拟机的创建，虚拟内存的分配，VCPU寄存器的读写，以及虚拟CPU的执行

Qemu模拟虚拟机用户空间组件，提供I/O设备模型，访问外设的途径



Qemu利用libkvm库通过 IOCTL调用进入内核模式，KVM为虚拟机创建虚拟CPU，虚拟内存后执行VMLAUNCH进入客户模式。加载Guest OS开始执行。
如果Guest OS 发生外部中断或者影子页表缺页之类的情况，会暂停Guest OS的执行，退出客户模式出行异常处理，之后重新进入客户模式，执行客户代码。
如果发生I/O事件或者信号队列中有信号到达，就会进入用户模式处理。


KVM 内存虚拟化及其实现(http://www.ibm.com/developerworks/cn/linux/l-cn-kvm-mem/)

1，影子页表
Guest OS 虚拟地址 经过 guest页表 转换为 guest 物理地址， guest物理地址经过kvm_memory_slot 转换为Host虚拟地址，
host虚拟地址经过host页表转换为host物理地址。

影子页表直接把guest虚拟地址转换为host物理地址，对于每一个guest进程都有一个影子页表，就是一个虚拟机有很多影子页表


2 EPT 额外页表

首先guest虚拟地址经过guest页表转换为guest物理地址(CR3里装的是guest页表，硬件完成转换)，然后EPT把guest物理地址转换为host物理地址。

